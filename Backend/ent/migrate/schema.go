// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// DrugsColumns holds the columns for the "drugs" table.
	DrugsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// DrugsTable holds the schema information for the "drugs" table.
	DrugsTable = &schema.Table{
		Name:        "drugs",
		Columns:     DrugsColumns,
		PrimaryKey:  []*schema.Column{DrugsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RegisterstoresColumns holds the columns for the "registerstores" table.
	RegisterstoresColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "amount", Type: field.TypeInt},
		{Name: "drug_drugs", Type: field.TypeInt, Nullable: true},
		{Name: "store_stores", Type: field.TypeInt, Nullable: true},
		{Name: "user_users", Type: field.TypeInt, Nullable: true},
	}
	// RegisterstoresTable holds the schema information for the "registerstores" table.
	RegisterstoresTable = &schema.Table{
		Name:       "registerstores",
		Columns:    RegisterstoresColumns,
		PrimaryKey: []*schema.Column{RegisterstoresColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "registerstores_drugs_drugs",
				Columns: []*schema.Column{RegisterstoresColumns[2]},

				RefColumns: []*schema.Column{DrugsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "registerstores_stores_stores",
				Columns: []*schema.Column{RegisterstoresColumns[3]},

				RefColumns: []*schema.Column{StoresColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "registerstores_users_users",
				Columns: []*schema.Column{RegisterstoresColumns[4]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StoresColumns holds the columns for the "stores" table.
	StoresColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// StoresTable holds the schema information for the "stores" table.
	StoresTable = &schema.Table{
		Name:        "stores",
		Columns:     StoresColumns,
		PrimaryKey:  []*schema.Column{StoresColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DrugsTable,
		RegisterstoresTable,
		StoresTable,
		UsersTable,
	}
)

func init() {
	RegisterstoresTable.ForeignKeys[0].RefTable = DrugsTable
	RegisterstoresTable.ForeignKeys[1].RefTable = StoresTable
	RegisterstoresTable.ForeignKeys[2].RefTable = UsersTable
}
